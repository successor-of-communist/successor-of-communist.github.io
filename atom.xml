<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Successor of Communist</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-20T14:45:07.915Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>soc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu18.04配置opencv3.4.1+opencv-contrib</title>
    <link href="http://yoursite.com/2018/06/20/page-opencv341-contrib/"/>
    <id>http://yoursite.com/2018/06/20/page-opencv341-contrib/</id>
    <published>2018-06-20T14:24:05.000Z</published>
    <updated>2018-06-20T14:45:07.915Z</updated>
    
    <content type="html"><![CDATA[<p>搞了很长时间，终于成功了<br><a href="https://www.pyimagesearch.com/2018/05/28/ubuntu-18-04-how-to-install-opencv/" target="_blank" rel="noopener">参考网址</a><br>上面也有16.04的教程</p><a id="more"></a><p>上面的网址说的很清楚<br>我就简单粗暴点<br>他写的是python+opencv,我用的是c++，所以略去了不必要的<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">upgrade</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> <span class="keyword">build</span>-essential cmake unzip pkg-config</span><br><span class="line"></span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libjpeg-dev libpng-dev libtiff-dev</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libavcodec-dev libavformat-dev libswscale-dev libv4l-dev</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libxvidcore-dev libx264-dev</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libgtk<span class="number">-3</span>-dev</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> libatlas-base-dev gfortran</span><br><span class="line">sudo apt-<span class="keyword">get</span> <span class="keyword">install</span> python3-dev</span><br><span class="line"></span><br><span class="line">cd ~</span><br><span class="line">wget -O opencv.zip https://github.com/opencv/opencv/<span class="keyword">archive</span>/<span class="number">3.4</span><span class="number">.1</span>.zip</span><br><span class="line">wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/<span class="keyword">archive</span>/<span class="number">3.4</span><span class="number">.1</span>.zip</span><br><span class="line"></span><br><span class="line">unzip opencv.zip</span><br><span class="line">unzip opencv_contrib.zip</span><br><span class="line"></span><br><span class="line">cd ~/opencv<span class="number">-3.4</span><span class="number">.1</span>/</span><br><span class="line">mkdir <span class="keyword">build</span></span><br><span class="line">cd <span class="keyword">build</span></span><br><span class="line">cmake -D CMAKE_BUILD_TYPE=<span class="keyword">RELEASE</span> \</span><br><span class="line">    -D CMAKE_INSTALL_PREFIX=/usr/<span class="keyword">local</span> \</span><br><span class="line">-D INSTALL_PYTHON_EXAMPLES=<span class="keyword">ON</span> \</span><br><span class="line">-D INSTALL_C_EXAMPLES=<span class="keyword">OFF</span> \</span><br><span class="line">-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib<span class="number">-3.4</span><span class="number">.1</span>/modules \</span><br><span class="line">-D BUILD_EXAMPLES=<span class="keyword">ON</span> ..</span><br><span class="line"></span><br><span class="line">make -j4</span><br><span class="line"></span><br><span class="line">sudo make <span class="keyword">install</span></span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure></p><p>最后配置编译环境可以参考我的另一篇文章ubuntu16.04配置opencv</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搞了很长时间，终于成功了&lt;br&gt;&lt;a href=&quot;https://www.pyimagesearch.com/2018/05/28/ubuntu-18-04-how-to-install-opencv/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;参考网址&lt;/a&gt;&lt;br&gt;上面也有16.04的教程&lt;/p&gt;
    
    </summary>
    
      <category term="opencv" scheme="http://yoursite.com/categories/opencv/"/>
    
    
      <category term="opencv" scheme="http://yoursite.com/tags/opencv/"/>
    
      <category term="ubuntu18.04" scheme="http://yoursite.com/tags/ubuntu18-04/"/>
    
  </entry>
  
  <entry>
    <title>题目总结</title>
    <link href="http://yoursite.com/2018/06/20/page-acm-index/"/>
    <id>http://yoursite.com/2018/06/20/page-acm-index/</id>
    <published>2018-06-20T08:45:00.000Z</published>
    <updated>2018-06-20T09:01:58.548Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最短路"><a href="#最短路" class="headerlink" title="最短路"></a>最短路</h2><p>hdu1593&emsp;hdu2433&emsp;hdu2112&emsp;hdu2544</p><h2 id="第K短路"><a href="#第K短路" class="headerlink" title="第K短路"></a>第K短路</h2><p>poj2449</p><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><p>hdu2647</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;最短路&quot;&gt;&lt;a href=&quot;#最短路&quot; class=&quot;headerlink&quot; title=&quot;最短路&quot;&gt;&lt;/a&gt;最短路&lt;/h2&gt;&lt;p&gt;hdu1593&amp;emsp;hdu2433&amp;emsp;hdu2112&amp;emsp;hdu2544&lt;/p&gt;
&lt;h2 id=&quot;第K短路&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="acm" scheme="http://yoursite.com/categories/acm/"/>
    
    
      <category term="acm" scheme="http://yoursite.com/tags/acm/"/>
    
  </entry>
  
  <entry>
    <title>cug2018校赛</title>
    <link href="http://yoursite.com/2018/06/18/page-acm-cug2018/"/>
    <id>http://yoursite.com/2018/06/18/page-acm-cug2018/</id>
    <published>2018-06-18T15:26:21.000Z</published>
    <updated>2018-06-20T09:02:46.275Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Problem-B-排序二叉树"><a href="#Problem-B-排序二叉树" class="headerlink" title="Problem  B 排序二叉树"></a>Problem  B 排序二叉树</h3><a id="more"></a><p>直接写二叉树会超时<br>在插入一个数据时，会发现它会放在二叉树上刚好比它大或者刚好比它小的后面，<br>也就是说它的父亲不是刚好比它大就是刚好比它小<br>可以用一个set维护已经插入二叉树的数，然后可以二分搜索到刚好比它大或者刚好比它小的数<br>然后把这个数也插入</p><hr><h3 id="Promble-E-噩梦中的序列"><a href="#Promble-E-噩梦中的序列" class="headerlink" title="Promble E 噩梦中的序列"></a>Promble E 噩梦中的序列</h3><p>直接暴力DFS</p><hr><h3 id="Problem-H-How-many-bracelets"><a href="#Problem-H-How-many-bracelets" class="headerlink" title="Problem H How many bracelets?"></a>Problem H How many bracelets?</h3><p>要用到Polya计数(看挑战书上)<br>一般的模板是有m种颜色，个数任意<br>这个题有3种颜色，每种颜色的个数是给定的，所以单个颜色珍珠的个数必须被n/gcd(k,n)整除,<br>否则的话，会有多种颜色的珍珠组成一个轨迹，而要求的是轨迹上的珍珠颜色都是相同的<br>然后将珍珠的分成gcd(k,n)组，算出有多少种组合<br>上面的是旋转<br>下面说翻转<br>有两种情况：当N为奇数时，可以选择一个点最为对称点，其它的点都是两两对称，所以就是，对称点给一种颜色，其它的就是剩余的颜色的组合<br>当N为偶数时，有两种情况：1选择两个点为对称轴，给这两个点枚举颜色，其它就是剩余颜色组合<br>2选两个边为对称轴，然后组合</p><h3 id="Problem-K-棋盘游戏"><a href="#Problem-K-棋盘游戏" class="headerlink" title="Problem K 棋盘游戏"></a>Problem K 棋盘游戏</h3><p>bfs棋盘的所有情况</p><hr><h3 id="Problem-I-Galgame中的SL"><a href="#Problem-I-Galgame中的SL" class="headerlink" title="Problem I Galgame中的SL"></a>Problem I Galgame中的SL</h3><p>可持久化并查集模板题</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Problem-B-排序二叉树&quot;&gt;&lt;a href=&quot;#Problem-B-排序二叉树&quot; class=&quot;headerlink&quot; title=&quot;Problem  B 排序二叉树&quot;&gt;&lt;/a&gt;Problem  B 排序二叉树&lt;/h3&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>模板</title>
    <link href="http://yoursite.com/2018/06/18/page-acm-template/"/>
    <id>http://yoursite.com/2018/06/18/page-acm-template/</id>
    <published>2018-06-18T14:55:33.000Z</published>
    <updated>2018-06-19T13:56:28.109Z</updated>
    
    <content type="html"><![CDATA[<h2 id="组合数"><a href="#组合数" class="headerlink" title="组合数"></a>组合数</h2><h4 id="emsp-打表"><a href="#emsp-打表" class="headerlink" title="&emsp;打表"></a>&emsp;打表</h4><a id="more"></a><p>主要用这个公式<br>$$<br>C(n,m)=C(n-1,m-1)+C(n-1,m)<br>$$<br>这个的n要求比较小 n&lt;=10,00<br>因为是$O(n^2)$的复杂度</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">10007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">int</span> C[MAXN+<span class="number">1</span>][MAXN+<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initial</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;=MAXN; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        C[<span class="number">0</span>][i] = <span class="number">0</span>;</span><br><span class="line">        C[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=MAXN; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;=MAXN; ++j)</span><br><span class="line">        C[i][j] = (C[i<span class="number">-1</span>][j] + C[i<span class="number">-1</span>][j<span class="number">-1</span>]) % M;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Combination</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> C[n][m];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Lucas定理求组合数"><a href="#Lucas定理求组合数" class="headerlink" title="Lucas定理求组合数"></a>Lucas定理求组合数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="function">LL <span class="title">Power_mod</span><span class="params">(LL a, LL b, LL p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) res = (res*a)%p;</span><br><span class="line">        a = (a*a)%p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">Comb</span><span class="params">(LL a,LL b, LL p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; b) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a == b) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(b &gt; a-b) b = a-b;</span><br><span class="line">    LL ans = <span class="number">1</span>, ca = <span class="number">1</span>, cb = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">0</span>; i&lt;b; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        ca = (ca*(a-i))%p;</span><br><span class="line">        cb = (cb*(b-i))%p;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = (ca*Power_mod(cb, p<span class="number">-2</span>, p))%p;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">Lucas</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n &amp;&amp; m &amp;&amp; ans)</span><br><span class="line">    &#123;</span><br><span class="line">        ans = (ans * Comb(n%p, m%p, p))%p;</span><br><span class="line">        n /= p;</span><br><span class="line">        m /= p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求素数"><a href="#求素数" class="headerlink" title="求素数"></a>求素数</h2><p>大概百万级的<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(v, <span class="number">0</span>, <span class="keyword">sizeof</span>(v));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= maxn; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!v[i]) &#123; v[++v[<span class="number">0</span>]] = i; &#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= v[<span class="number">0</span>] &amp;&amp; v[j] &lt;= maxn/i ; j++) &#123;</span><br><span class="line">v[v[j] * i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i%v[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2><h4 id="emsp-直接求欧拉函数"><a href="#emsp-直接求欧拉函数" class="headerlink" title="&emsp;直接求欧拉函数"></a>&emsp;直接求欧拉函数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euler</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123; <span class="comment">//返回euler(n)</span></span><br><span class="line">    <span class="keyword">int</span> res=n,a=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=a;i++)&#123;<span class="comment">//从小到大尝试n的质因数</span></span><br><span class="line">        <span class="keyword">if</span>(a%i==<span class="number">0</span>)&#123;<span class="comment">//如果i是n的质因数</span></span><br><span class="line">            res=res/i*(i<span class="number">-1</span>);<span class="comment">//提了一个1/i出来，先进行除法是为了防止中间数据的溢出</span></span><br><span class="line">            <span class="keyword">while</span>(a%i==<span class="number">0</span>) a/=i;<span class="comment">//欧拉函数只记算一种质因数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;<span class="number">1</span>) res=res/a*(a<span class="number">-1</span>);<span class="comment">//如果最后还剩因子</span></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,euler(x));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="emsp-筛选法打欧拉函数表"><a href="#emsp-筛选法打欧拉函数表" class="headerlink" title="&emsp; 筛选法打欧拉函数表"></a>&emsp; 筛选法打欧拉函数表</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Max 1000001</span></span><br><span class="line"><span class="keyword">int</span> euler[Max];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    euler[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;Max;i++)</span><br><span class="line">        euler[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;Max;i++)</span><br><span class="line">        <span class="keyword">if</span>(euler[i]==i)<span class="comment">//如果i是质数</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;Max;j+=i)</span><br><span class="line">                euler[j]=euler[j]/i*(i<span class="number">-1</span>);<span class="comment">//提一个1/i,先进行除法是为了防止中间数据的溢出</span></span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Init();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,euler[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="可持久化并查集"><a href="#可持久化并查集" class="headerlink" title="可持久化并查集"></a>可持久化并查集</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 200005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 9000005</span></span><br><span class="line"><span class="keyword">int</span> root[maxn],v[maxm],ls[maxm],rs[maxm];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;k,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    k=++cnt;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        v[k]=l;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">    build(ls[k],l,mid);</span><br><span class="line">    build(rs[k],mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">        <span class="keyword">return</span> v[k];</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(pos&lt;=mid)</span><br><span class="line">        <span class="keyword">return</span> query(ls[k],l,mid,pos);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> query(rs[k],mid+<span class="number">1</span>,r,pos);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> &amp;y,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    y=++cnt;</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    &#123;</span><br><span class="line">        v[y]=val;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    ls[y]=ls[x];</span><br><span class="line">    rs[y]=rs[x];</span><br><span class="line">    <span class="keyword">if</span>(pos&lt;=mid)</span><br><span class="line">        insert(ls[x],ls[y],l,mid,pos,val);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        insert(rs[x],rs[y],mid+<span class="number">1</span>,r,pos,val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> &amp;r,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp=query(r,<span class="number">1</span>,n,x);</span><br><span class="line">    <span class="keyword">if</span>(tmp==x)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> ret=find(r,tmp);</span><br><span class="line">        insert(r,r,<span class="number">1</span>,n,x,ret);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">    &#123;</span><br><span class="line">        build(root[<span class="number">0</span>],<span class="number">1</span>,n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> f;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;f;</span><br><span class="line">            <span class="keyword">if</span>(f==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> x,y;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">                <span class="keyword">int</span> fx=find(root[i<span class="number">-1</span>],x),fy=find(root[i<span class="number">-1</span>],y);</span><br><span class="line">                <span class="keyword">if</span>(fx==fy)</span><br><span class="line">                    root[i]=root[i<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    insert(root[i<span class="number">-1</span>],root[i],<span class="number">1</span>,n,fx,fy);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(f==<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> x;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">                root[i]=root[x];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">int</span> x,y;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">                root[i]=root[i<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">int</span> fx=find(root[i],x),fy=find(root[i],y);</span><br><span class="line">                <span class="keyword">if</span>(fx==fy)</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">"YES"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">"NO"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最短路"><a href="#最短路" class="headerlink" title="最短路"></a>最短路</h2><h4 id="emsp-Dijkstra"><a href="#emsp-Dijkstra" class="headerlink" title="&emsp;Dijkstra"></a>&emsp;Dijkstra</h4><ul><li>使用优先队列优化Dijkstra算法</li><li>复杂度O(ElongE)</li><li>注意对vector<edge> E[MAXN]进行初始化后加边</edge></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    qNode(<span class="keyword">int</span> v = <span class="number">0</span>, <span class="keyword">int</span> c = <span class="number">0</span>) : v(v), c(c) &#123;&#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> qNode &amp;r) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> c &gt; r.c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> cost;</span><br><span class="line">    Edge(<span class="keyword">int</span> v = <span class="number">0</span>, <span class="keyword">int</span> cost = <span class="number">0</span>) : v(v), cost(cost) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;Edge&gt; E[MAXN];</span><br><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> dist[MAXN];     <span class="comment">//  最短路距离</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> start)</span>     <span class="comment">//  点的编号从1开始</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dist));</span><br><span class="line">    priority_queue&lt;qNode&gt; que;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        que.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    dist[start] = <span class="number">0</span>;</span><br><span class="line">    que.push(qNode(start, <span class="number">0</span>));</span><br><span class="line">    qNode tmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = que.top();</span><br><span class="line">        que.pop();</span><br><span class="line">        <span class="keyword">int</span> u = tmp.v;</span><br><span class="line">        <span class="keyword">if</span> (vis[u])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[u] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; E[u].size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v = E[u][i].v;</span><br><span class="line">            <span class="keyword">int</span> cost = E[u][i].cost;</span><br><span class="line">            <span class="keyword">if</span> (!vis[v] &amp;&amp; dist[v] &gt; dist[u] + cost)</span><br><span class="line">            &#123;</span><br><span class="line">                dist[v] = dist[u] + cost;</span><br><span class="line">                que.push(qNode(v, dist[v]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    E[u].push_back(Edge(v, w));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="emsp-SPFA"><a href="#emsp-SPFA" class="headerlink" title="&emsp; SPFA"></a>&emsp; SPFA</h4><ul><li>时间复杂度O(kE)</li><li>可判负环</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1010</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> cost;</span><br><span class="line">    Edge(<span class="keyword">int</span> _v = <span class="number">0</span>, <span class="keyword">int</span> _cost = <span class="number">0</span>) : v(_v), cost(_cost) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;Edge&gt; E[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEdge</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    E[u].push_back(Edge(v, w));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[MAXN];     <span class="comment">//  在队列标志</span></span><br><span class="line"><span class="keyword">int</span> cnt[MAXN];      <span class="comment">//  每个点的入列队次数</span></span><br><span class="line"><span class="keyword">int</span> dist[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dist));</span><br><span class="line"></span><br><span class="line">    vis[start] = <span class="literal">true</span>;</span><br><span class="line">    dist[start] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; que;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        que.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    que.push(start);</span><br><span class="line">    <span class="built_in">memset</span>(cnt, <span class="number">0</span>, <span class="keyword">sizeof</span>(cnt));</span><br><span class="line">    cnt[start] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!que.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u = que.front();</span><br><span class="line">        que.pop();</span><br><span class="line">        vis[u] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; E[u].size(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> v = E[u][i].v;</span><br><span class="line">            <span class="keyword">if</span> (dist[v] &gt; dist[u] + E[u][i].cost)</span><br><span class="line">            &#123;</span><br><span class="line">                dist[v] = dist[u] + E[u][i].cost;</span><br><span class="line">                <span class="keyword">if</span> (!vis[v])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[v] = <span class="literal">true</span>;</span><br><span class="line">                    que.push(v);</span><br><span class="line">                    <span class="keyword">if</span> (++cnt[v] &gt; n)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;   <span class="comment">//  cnt[i]为入队列次数，用来判定是否存在负环回路</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="缩点（强连通分量）"><a href="#缩点（强连通分量）" class="headerlink" title="缩点（强连通分量）"></a>缩点（强连通分量）</h2><h4 id="emsp-tarjan"><a href="#emsp-tarjan" class="headerlink" title="&emsp;tarjan"></a>&emsp;tarjan</h4><h2 id="LCA"><a href="#LCA" class="headerlink" title="LCA"></a>LCA</h2><h2 id="polya"><a href="#polya" class="headerlink" title="polya"></a>polya</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  m种颜色涂n个点的环</span></span><br><span class="line"><span class="comment"> *  只有旋转a/n种只有翻转b/n种</span></span><br><span class="line"><span class="comment"> *  两者都有(a+b)/(n*2)种</span></span><br><span class="line"><span class="comment"> *  n,m&lt;=1e9</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">int</span> prime[<span class="number">100005</span>];<span class="comment">//求出1~1e5的素数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">mod_pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> aa=a;</span><br><span class="line">    <span class="keyword">int</span> bb=b;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            ans=(ans*aa)%mod;</span><br><span class="line">        aa=(aa*aa)%mod;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> i=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(;i*i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp=i;</span><br><span class="line">            <span class="keyword">int</span> euler=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;prime[<span class="number">0</span>];j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(tmp%prime[j]==<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    euler=euler/prime[j]*(prime[j]<span class="number">-1</span>);</span><br><span class="line">                    <span class="keyword">while</span>(tmp%prime[j]==<span class="number">0</span>) tmp/=prime[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            res+=euler*mod_pow(m,n/i)%mod;</span><br><span class="line">            res%=mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  颜色数固定，每种颜色的量（就是能涂多少个点）给定</span></span><br><span class="line"><span class="comment"> *  下面这个代码是3种颜色，每种颜色的分别个数是x,y,z</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> C[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    C[<span class="number">0</span>][<span class="number">0</span>]=C[<span class="number">1</span>][<span class="number">0</span>]=C[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">50</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        C[i][<span class="number">0</span>]=C[i][i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            C[i][j]=C[i<span class="number">-1</span>][j<span class="number">-1</span>]+C[i<span class="number">-1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tmp[<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(tmp[i]%len)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        tmp[i]/=len;</span><br><span class="line">        sum+=tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans*=C[sum][tmp[i]];</span><br><span class="line">        sum-=tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,z;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        <span class="keyword">int</span> n=x+y+z;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp[<span class="number">0</span>]=x;</span><br><span class="line">            tmp[<span class="number">1</span>]=y;</span><br><span class="line">            tmp[<span class="number">2</span>]=z;</span><br><span class="line">            ans+=cal(n/gcd(i,n));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp[<span class="number">0</span>]=x;</span><br><span class="line">                tmp[<span class="number">1</span>]=y;</span><br><span class="line">                tmp[<span class="number">2</span>]=z;</span><br><span class="line">                tmp[i]--;</span><br><span class="line">                ans+=cal(<span class="number">2</span>)*n;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    tmp[<span class="number">0</span>]=x;</span><br><span class="line">                    tmp[<span class="number">1</span>]=y;</span><br><span class="line">                    tmp[<span class="number">2</span>]=z;</span><br><span class="line">                    tmp[i]--;</span><br><span class="line">                    tmp[j]--;</span><br><span class="line">                    <span class="keyword">if</span>(tmp[i]&lt;<span class="number">0</span>||tmp[j]&lt;<span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    ans+=cal(<span class="number">2</span>)*n/<span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp[<span class="number">0</span>]=x;</span><br><span class="line">            tmp[<span class="number">1</span>]=y;</span><br><span class="line">            tmp[<span class="number">2</span>]=z;</span><br><span class="line">            ans+=cal(<span class="number">2</span>)*n/<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=ans/(<span class="number">2</span>*n);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;组合数&quot;&gt;&lt;a href=&quot;#组合数&quot; class=&quot;headerlink&quot; title=&quot;组合数&quot;&gt;&lt;/a&gt;组合数&lt;/h2&gt;&lt;h4 id=&quot;emsp-打表&quot;&gt;&lt;a href=&quot;#emsp-打表&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;打表&quot;&gt;&lt;/a&gt;&amp;emsp;打表&lt;/h4&gt;
    
    </summary>
    
      <category term="ACM" scheme="http://yoursite.com/categories/ACM/"/>
    
    
      <category term="ACM" scheme="http://yoursite.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 安装opencv</title>
    <link href="http://yoursite.com/2018/06/17/page_opencv/"/>
    <id>http://yoursite.com/2018/06/17/page_opencv/</id>
    <published>2018-06-17T13:54:38.808Z</published>
    <updated>2018-06-17T13:54:38.784Z</updated>
    
    <content type="html"><![CDATA[<p>1.去官网下载opencv，在本教程中选用的时opencv3.4.1，其他版本的配置方法异曲同工<br><a id="more"></a><br><a href="https://opencv.org/releases.html" target="_blank" rel="noopener">下载地址</a>,选择sources版本 </p><p>2.解压下载下来的zip包<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">unzip</span> <span class="selector-tag">opencv-3</span><span class="selector-class">.4</span><span class="selector-class">.1</span><span class="selector-class">.zip</span></span><br></pre></td></tr></table></figure></p><p>3.进入到解压后的文件包中</p><p>4.安装依赖库和cmake ，如果提醒需要apt-get update，那就先sudo su进入root权限，再sudo apt-get update，然后在执行下面命令<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install cmake  </span><br><span class="line"></span><br><span class="line">sudo apt-<span class="built_in">get</span> install build-essential libgtk2<span class="number">.0</span>-<span class="built_in">dev</span> libavcodec-<span class="built_in">dev</span> libavformat-<span class="built_in">dev</span> libjpeg.<span class="built_in">dev</span> libtiff4.<span class="built_in">dev</span> libswscale-<span class="built_in">dev</span> libjasper-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure></p><p>5.安装完cmake之后执行命令 ,创建编译文件夹，不创建的会提示<br>fatal:In-source builds are not allowed.<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> my_build_dir</span><br><span class="line"><span class="built_in">cd</span> my_build_dir</span><br></pre></td></tr></table></figure></p><p>6.cmake一下<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -D <span class="attribute">CMAKE_BUILD_TYPE</span>=Release -D <span class="attribute">CMAKE_INSTALL_PREFIX</span>=/usr/local <span class="built_in">..</span></span><br></pre></td></tr></table></figure></p><blockquote><ul><li>注意：如果已经在新的文件夹中编译，但是还会出现之前的报错，把cmakecache.txt删了再编译</li></ul></blockquote><p>期间可能会下载一个东西，等待一会儿就OK </p><p>7.执行命令，漫长的编译过程<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo make</span></span><br></pre></td></tr></table></figure></p><p>8.执行命令<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make <span class="keyword">install</span></span><br></pre></td></tr></table></figure></p><p>9.sudo make install 执行完毕后OpenCV编译过程就结束了，接下来就需要配置一些OpenCV的编译环境首先将OpenCV的库添加到路径，从而可以让系统找到<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/ld<span class="selector-class">.so</span><span class="selector-class">.conf</span><span class="selector-class">.d</span>/opencv.conf</span><br></pre></td></tr></table></figure></p><p>执行此命令后打开的可能是一个空白的文件，不用管，只需要在文件末尾添加</p><blockquote><p>/usr/local/lib  </p></blockquote><p>10.执行如下命令使得刚才的配置路径生效<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo ldconfig</span></span><br></pre></td></tr></table></figure></p><p>过程中没有问题，有问题的可以看下最下面的参考网址</p><p>11.配置bash<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit <span class="regexp">/etc/</span>bash.bashrc</span><br></pre></td></tr></table></figure></p><p>在最末尾添加</p><blockquote><p>PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig<br>  export PKG_CONFIG_PATH  </p></blockquote><p>保存，执行如下命令使得配置生效<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/etc/</span>bash.bashrc</span><br></pre></td></tr></table></figure></p><p>更新<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo updatedb</span></span><br></pre></td></tr></table></figure></p><p>12.至此所有的配置都已经完成<br>下面用一个小程序测试一下</p><p>找到<br>cd到opencv-3.4.1/samples/cpp/example_cmake目录下<br>我们可以看到这个目录里官方已经给出了一个cmake的example我们可以拿来测试下<br>按顺序执行<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cmake .</span><br><span class="line">make</span><br><span class="line">./opencv_example</span><br></pre></td></tr></table></figure></p><p>即可看到打开了摄像头，在左上角有一个hello opencv<br>即表示配置成功</p><p>13.测试<br>随便找个代码试一下<br>如果提示</p><blockquote><p>fatal:core/core.hpp file not find<br>前面加opencv2/</p><p>#include &lt;opencv2/core/core.hpp&gt;<br>opencv的头文件都类似</p></blockquote><p>参考地址：<br><a href="https://blog.csdn.net/cocoaqin/article/details/78163171" target="_blank" rel="noopener">https://blog.csdn.net/cocoaqin/article/details/78163171</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.去官网下载opencv，在本教程中选用的时opencv3.4.1，其他版本的配置方法异曲同工&lt;br&gt;
    
    </summary>
    
    
      <category term="opencv" scheme="http://yoursite.com/tags/opencv/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/06/17/hello-world/"/>
    <id>http://yoursite.com/2018/06/17/hello-world/</id>
    <published>2018-06-17T13:50:09.696Z</published>
    <updated>2018-06-17T13:50:09.660Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vim+markdown</title>
    <link href="http://yoursite.com/2018/06/17/vim_markdown/"/>
    <id>http://yoursite.com/2018/06/17/vim_markdown/</id>
    <published>2018-06-17T13:10:07.000Z</published>
    <updated>2018-06-17T13:52:51.283Z</updated>
    
    <content type="html"><![CDATA[<p>没有vim感觉生活不能自理<br><a id="more"></a><br>install三个插件:<br>语法高亮插件<a href="https://github.com/plasticboy/vim-markdown" target="_blank" rel="noopener">vim-markdown</a><br>实时预览插件<a href="https://github.com/iamcco/markdown-preview.vim" target="_blank" rel="noopener">markdown-preview.vim</a><br>可以预览数学公式插件<a href="https://github.com/iamcco/markdown-preview.vim" target="_blank" rel="noopener">mathjax-support-for-mkdp</a><br>后两个是在一起的，说明文档写的很清楚</p><p>我用的vundle管理vim插件只用添加</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Plugin</span> <span class="symbol">'godlygeek</span>/tabular'</span><br><span class="line"><span class="type">Plugin</span> <span class="symbol">'plasticboy</span>/vim-markdown'</span><br><span class="line"><span class="type">Plugin</span> <span class="symbol">'iamcco</span>/mathjax-support-for-mkdp'</span><br><span class="line"><span class="type">Plugin</span> <span class="symbol">'iamcco</span>/markdown-preview.vim'</span><br></pre></td></tr></table></figure><p>然后<br><code>:PluginInstall</code></p><p>OK<br>结束</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没有vim感觉生活不能自理&lt;br&gt;
    
    </summary>
    
      <category term="vim" scheme="http://yoursite.com/categories/vim/"/>
    
    
      <category term="mathjax" scheme="http://yoursite.com/tags/mathjax/"/>
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用插件支持MathJax</title>
    <link href="http://yoursite.com/2018/06/17/page_hexo_mathjax/"/>
    <id>http://yoursite.com/2018/06/17/page_hexo_mathjax/</id>
    <published>2018-06-17T12:44:21.000Z</published>
    <updated>2018-06-17T13:54:06.113Z</updated>
    
    <content type="html"><![CDATA[<p>MathJax是使用LaTeX方式输入数学公式的好工具。Hexo虽然可以直接使用mathjax，但是存在一些不方便之处。使用hexo-math这个插件可以大大方便使用。<br><a id="more"></a></p><p>在hexo安装目录下执行</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="built_in">math</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>然后编辑站点根目录下的_config.yml，添加</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">math</span>:</span><br><span class="line">  <span class="attribute">engine</span>: <span class="string">'mathjax'</span> # or <span class="string">'katex'</span></span><br><span class="line">  <span class="attribute">mathjax</span>:</span><br><span class="line">    <span class="attribute">src</span>: custom_mathjax_source</span><br><span class="line">    <span class="attribute">config</span>:</span><br><span class="line">      # MathJax config</span><br></pre></td></tr></table></figure><p>之后进入theme的目录，编辑主题的_config.yml，找到mathjax字段。NexT 5.0.1中默认mathjax是禁用，需要改成</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mathjax:</span></span><br><span class="line"><span class="attr">   enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>OK<br>这样就好了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MathJax是使用LaTeX方式输入数学公式的好工具。Hexo虽然可以直接使用mathjax，但是存在一些不方便之处。使用hexo-math这个插件可以大大方便使用。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="mathjax" scheme="http://yoursite.com/tags/mathjax/"/>
    
  </entry>
  
  <entry>
    <title>Canny边缘检测</title>
    <link href="http://yoursite.com/2018/06/04/page_canny/"/>
    <id>http://yoursite.com/2018/06/04/page_canny/</id>
    <published>2018-06-04T03:59:18.000Z</published>
    <updated>2018-06-17T13:49:35.381Z</updated>
    
    <content type="html"><![CDATA[<h3 id="参考地址"><a href="#参考地址" class="headerlink" title="参考地址"></a>参考地址</h3><p><a href="https://blog.csdn.net/dcrmg/article/details/52344902" target="_blank" rel="noopener">https://blog.csdn.net/dcrmg/article/details/52344902</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考地址&quot;&gt;&lt;a href=&quot;#参考地址&quot; class=&quot;headerlink&quot; title=&quot;参考地址&quot;&gt;&lt;/a&gt;参考地址&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/dcrmg/article/details/52344902&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/dcrmg/article/details/52344902&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ComputerVision" scheme="http://yoursite.com/categories/ComputerVision/"/>
    
    
      <category term="ComputerVision" scheme="http://yoursite.com/tags/ComputerVision/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04 Hexo配置</title>
    <link href="http://yoursite.com/2018/05/31/page_hexo/"/>
    <id>http://yoursite.com/2018/05/31/page_hexo/</id>
    <published>2018-05-31T13:58:37.000Z</published>
    <updated>2018-06-04T13:15:57.990Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>安装 Node.js 的最佳方式是使用 nvm。</p><p>Wget:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- http<span class="variable">s:</span>//raw.github.<span class="keyword">com</span>/creationix/nvm/master/install.<span class="keyword">sh</span> | <span class="keyword">sh</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvm install stable</span></span><br></pre></td></tr></table></figure></p><p>##安装 Hexo<br>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure></p><h2 id="初探-Hexo"><a href="#初探-Hexo" class="headerlink" title="初探 Hexo"></a>初探 Hexo</h2><p>先要初始化一个目录<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init &lt;filename&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s      //调试</span></span><br></pre></td></tr></table></figure></p><p>执行后会出现<br>INFO  Start processing<br>INFO  Hexo is running at <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>. Press Ctrl+C to stop.</p><p>浏览器登录网址就可以看到刚创建的博客</p><h2 id="将hexo博客部署到github上"><a href="#将hexo博客部署到github上" class="headerlink" title="将hexo博客部署到github上"></a>将hexo博客部署到github上</h2><p>申请github帐号创建仓库：yourname.github.io<br>yourname是你的账户名</p><p>修改配置文件blog/_config.yml，修改deploy项（在文件最下面）的内容，如下所示：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Deployment 注释</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Docs: https://hexo.io/docs/deployment.html</span></span></span><br><span class="line">deploy:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 类型</span></span><br><span class="line">  type: git</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 仓库</span></span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line"><span class="meta">  #</span><span class="bash"> 分支</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>输入下面的命令将hexo博客部署到github中：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 清空静态页面</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成静态页面</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署 </span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><h2 id="next主题配置"><a href="#next主题配置" class="headerlink" title="next主题配置"></a>next主题配置</h2><p><a href="https://zhuanlan.zhihu.com/p/30836436" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/30836436</a><br><a href="https://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="noopener">https://blog.csdn.net/qq_33699981/article/details/72716951</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装-Node-js&quot;&gt;&lt;a href=&quot;#安装-Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 Node.js&quot;&gt;&lt;/a&gt;安装 Node.js&lt;/h2&gt;&lt;p&gt;安装 Node.js 的最佳方式是使用 nvm。&lt;/p&gt;
&lt;p&gt;Wget:&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget -qO- http&lt;span class=&quot;variable&quot;&gt;s:&lt;/span&gt;//raw.github.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;/creationix/nvm/master/install.&lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt; | &lt;span class=&quot;keyword&quot;&gt;sh&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
